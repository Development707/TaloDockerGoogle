upstream client {
	server talo-reactjs:3000;
}

upstream api {
	server talo-nodejs:5000;
}

server {
	listen 		80;
	listen 		[::]:80;
	server_name talo.dev www.talo.dev;

	location ~ /.well-known/acme-challenge {
		allow all;
		root /var/www/html;
	}
	
	location / {
		rewrite ^ https://$host$request_uri? permanent;
	}
}

server {
    listen 				443 ssl http2;
	listen 				[::]:443 ssl http2;
    server_name 		talo.dev www.talo.dev;
	server_tokens 		off;
	resolver 			8.8.8.8;

	ssl_certificate 	/etc/letsencrypt/live/talo.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/talo.dev/privkey.pem;
	ssl_buffer_size 	8k;
	ssl_dhparam 		/etc/ssl/certs/dhparam-2048.pem;
	ssl_protocols 		TLSv1.2 TLSv1.1 TLSv1;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 		ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
	ssl_ecdh_curve 		secp384r1;
	ssl_session_tickets off;
	ssl_stapling 		on;
	ssl_stapling_verify on;

	location / {
		proxy_pass http://client;
	}

	# Web App socket IO V4
	location /socket.io/ {
		proxy_http_version 	1.1;
		proxy_set_header 	Upgrade $http_upgrade;
		proxy_set_header 	Connection "Upgrade";
		proxy_set_header 	Host $host;
		proxy_pass 			http://api/socket.io/;
  	}
	# Mobile socker IO V2
	location /mobile/socket.io/ {
		proxy_http_version 	1.1;
		proxy_set_header 	Upgrade $http_upgrade;
		proxy_set_header 	Connection "Upgrade";
		proxy_set_header 	Host $host;
		proxy_pass 			http://api/mobile/socket.io/;
  	}

	location /api/ {
		proxy_pass 			http://api/;
		proxy_set_header    X-Forwarded-For $remote_addr;
	}
}

client_max_body_size 200M;